@model MyArt.Model.ClientCreate

@{
    ViewBag.Title = "Create";
}

<br />
<div></div>
<img src="~/Content/asset/Jumbo3.jpg" style="width:1150px; height:120px;" />

    <div>
        <br />
        <div>
            <p>
                <a href="@Url.Action( "Index", "Client")" class="btn btn-sm" style=" background-color:crimson !important; color: white !important;">CLIENTS</a>
                <a href="@Url.Action( "ListUnSoldArt", "Art")" class="btn btn-sm" style=" background-color:crimson !important; color: white !important;">SELL</a>
            </p>
        </div>
    </div>


<div class="row">
    <div class="col-sm-4">   </div>
    <div class="col-sm-6">
        <h1 style="color: crimson;
        text-shadow: 2px 2px 2px black;
        font-family: 'Bangers', cursive;
        font-size:60px;
        font-weight:300;">
            Add NEW CLIENT
        </h1>
    </div>
</div>
<hr />
<div class="row">
    <div class=" col-lg-2">  </div>
    <div class=" col-lg-9">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="row">
                    <div class="form-group col-sm-3">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div>
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-sm-3">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div>
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-sm-3">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div>
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-sm-3">
                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div>
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">

                    <div class="form-group col-sm-3">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div>
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-sm-3">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div>
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-sm-3">
                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div>
                            @Html.EnumDropDownListFor(x => x.State, "Select My Type", new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group col-sm-3">
                        @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div>
                            @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-sm-2">
                        @Html.LabelFor(model => model.Collector, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Collector)
                        @Html.ValidationMessageFor(model => model.Collector, "", new { @class = "text-danger" })
                    </div>
                    <div>
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
