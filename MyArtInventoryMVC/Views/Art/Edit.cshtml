@model MyArt.Model.ArtEdit

@{
    ViewBag.Title = "Edit";
}
<br />
<div> </div>
<img src="~/Content/asset/JUmbo10.jpg" style="width:1150px; height:120px;" />
<br />
<br />
<div class="col-sm-5">
    <p>
        <a href="@Url.Action( "Details", "Art",new { id = Model.ArtID })" class="btn btn-sm" style=" background-color:crimson !important; color: white !important;">BACK</a>
        <a href="@Url.Action( "Index", "Art",new { id = Model.ArtID })" class="btn btn-sm" style=" background-color:crimson !important; color: white !important;">ART</a>
        <a href="@Url.Action( "Edit", "Art",new { id = Model.ArtID })" class="btn btn-sm" style=" background-color:crimson !important; color: white !important;">EDIT</a>
        <a href="@Url.Action( "Delete", "Art",new { id = Model.ArtID })" class="btn btn-sm" style=" background-color:crimson !important; color: white !important;">DELETE</a>
    </p>

</div>
<div class="col-sm-7">
    <h1 style="color: crimson;
        text-shadow: 2px 2px 2px black;
        font-family: 'Bangers', cursive;
        font-size:80px;
        font-weight:300;">
        ART Edit
    </h1>
</div>

<br />



        <div class=" col-lg-2">  </div>
        <div class=" col-lg-9">


            @using (Html.BeginForm("Edit", "Art", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.ArtID)
                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="row">

                        <div class="form-group col-sm-3">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div>
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group col-sm-3">
                            @Html.LabelFor(model => model.Style, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div>
                                @Html.EnumDropDownListFor(x => x.Style, "Select My Type", new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group col-sm-3">
                            @Html.LabelFor(model => model.Medium, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div>
                                @Html.EnumDropDownListFor(x => x.Medium, "Select My Type", new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group col-sm-3">
                            @Html.LabelFor(model => model.Surface, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div>
                                @Html.EditorFor(model => model.Surface, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Surface, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>


                    <div class="row">


                        <div class="form-group col-sm-2">
                            @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div>
                                @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-sm-2 ">
                            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div>
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-sm-3">
                            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div>
                                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-sm-3">
                            @* @Html.EditorFor(m => m.DateOfTransaction, new { htmlAttributes = new { @class = "form-control input-sm" } })*@
                            @Html.LabelFor(model => model.DateOfCreation, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div>
                                @Html.EditorFor(model => model.DateOfCreation, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DateOfCreation, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-sm-3">
                            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div>
                                @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>

                    <div class="row">

                        <div class="form-group col-sm-2">
                            <div>
                                @Html.LabelFor(model => model.Sold, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Sold)
                                @Html.ValidationMessageFor(model => model.Sold, "", new { @class = "text-danger" })
                            </div>
                            <br />
                        </div>

                        <div class="form-group col-sm-4">
                            @Html.LabelFor(model => model.ImageContent, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div>
                                <input type="file" name="ImageData" id="ImageData" onchange="fileCheck(this);" />
                                @*@Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                        <br />
                        @*<div class="form-group col-sm-5">
                                <div>
                                    @Html.LabelFor(model => model.Sold, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Sold)
                                    @Html.ValidationMessageFor(model => model.Sold, "", new { @class = "text-danger" })
                                </div>
                                <br />
                            </div>*@
                    </div>

                    <br />
                    <div class="row">
                        <div class="col-sm-5">
                        </div>
                        <div>

                            <input type="submit" value="Save" class="btn btn-default" />

                        </div>
                    </div>


                </div>
            }
        </div>
    </div>


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
